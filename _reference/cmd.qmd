# cmd { #kimmdy.cmd }

`cmd`

Functions for starting KIMMDY either from python or the command line.
Also initialized logging and configuration.

## Functions

| Name | Description |
| --- | --- |
| [build_examples](#kimmdy.cmd.build_examples) | Build examples from the command line. |
| [configure_logging](#kimmdy.cmd.configure_logging) | Configure logging. |
| [get_build_example_args](#kimmdy.cmd.get_build_example_args) | Parse command line arguments. |
| [get_cmdline_args](#kimmdy.cmd.get_cmdline_args) | Parse command line arguments and configure logger. |
| [kimmdy](#kimmdy.cmd.kimmdy) | Run KIMMDY from the command line. |
| [kimmdy_run](#kimmdy.cmd.kimmdy_run) | Run KIMMDY from python. |

### build_examples { #kimmdy.cmd.build_examples }

`cmd.build_examples()`

Build examples from the command line.

### configure_logging { #kimmdy.cmd.configure_logging }

`cmd.configure_logging(args, color=False)`

Configure logging.

Configures the logging module with optional colorcodes
for the terminal.

#### Parameters

| Name    | Type                                                     | Description                                               | Default    |
|---------|----------------------------------------------------------|-----------------------------------------------------------|------------|
| `args`  | [argparse](`argparse`).[Namespace](`argparse.Namespace`) | Command line arguments.                                   | _required_ |
| `color` |                                                          | Should logging output use colorcodes for terminal output? | `False`    |

### get_build_example_args { #kimmdy.cmd.get_build_example_args }

`cmd.get_build_example_args()`

Parse command line arguments.

#### Returns

| Type                     | Description                   |
|--------------------------|-------------------------------|
| [Namespace](`Namespace`) | parsed command line arguments |

### get_cmdline_args { #kimmdy.cmd.get_cmdline_args }

`cmd.get_cmdline_args()`

Parse command line arguments and configure logger.

#### Returns

| Type                     | Description                   |
|--------------------------|-------------------------------|
| [Namespace](`Namespace`) | parsed command line arguments |

### kimmdy { #kimmdy.cmd.kimmdy }

`cmd.kimmdy()`

Run KIMMDY from the command line.

The configuration is gathered from the input file,
which is `kimmdy.yml` by default.

### kimmdy_run { #kimmdy.cmd.kimmdy_run }

`cmd.kimmdy_run(input=Path('kimmdy.yml'), loglevel='DEBUG', logfile=Path('kimmdy.log'), checkpoint='', from_latest_checkpoint=False, concat=False, show_plugins=False, show_schema_path=False, generate_jobscript=False)`

Run KIMMDY from python.

#### Parameters

| Name                     | Type                   | Description                                                                               | Default              |
|--------------------------|------------------------|-------------------------------------------------------------------------------------------|----------------------|
| `input`                  | [Path](`pathlib.Path`) | kimmdy input yml file.                                                                    | `Path('kimmdy.yml')` |
| `loglevel`               | [str](`str`)           | Loglevel. One of ["INFO", "WARNING", "MESSAGE", "DEBUG"]                                  | `'DEBUG'`            |
| `logfile`                | [Path](`pathlib.Path`) | File path of the logfile.                                                                 | `Path('kimmdy.log')` |
| `checkpoint`             | [str](`str`)           | File path if a kimmdy.cpt file to restart KIMMDY from a checkpoint.                       | `''`                 |
| `from_latest_checkpoint` | [bool](`bool`)         | Start KIMMDY from the latest checkpoint.                                                  | `False`              |
| `concat`                 | [bool](`bool`)         | Don't perform a full KIMMDY run but instead concatenate trajectories from a previous run. | `False`              |
| `show_plugins`           | [bool](`bool`)         | Show available plugins and exit.                                                          | `False`              |
| `show_schema_path`       | [bool](`bool`)         | Print path to yaml schema for use with yaml-language-server e.g. in VSCode and Neovim     | `False`              |
| `generate_jobscript`     | [bool](`bool`)         | Instead of running KIMMDY directly, generate at jobscript.sh for slurm HPC clusters       | `False`              |