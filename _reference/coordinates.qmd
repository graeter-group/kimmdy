# coordinates { #kimmdy.coordinates }

`coordinates`

coordinate, topology and plumed modification functions

## Classes

| Name | Description |
| --- | --- |
| [AffectedInteractions](#kimmdy.coordinates.AffectedInteractions) | keeping track of affected interactions during the merge process to add the correct helper pairs |
| [MoleculeTypeMerger](#kimmdy.coordinates.MoleculeTypeMerger) | Takes two MoleculeTypes and joins them for a smooth free-energy like parameter transition simulation |

### AffectedInteractions { #kimmdy.coordinates.AffectedInteractions }

```python
coordinates.AffectedInteractions(
    self,
    atoms=set(),
    bonds=BondsPairSets(),
    angles=AnglesPairSets(),
    dihedrals=DihedralsPairSets(),
)
```

keeping track of affected interactions during the merge process to add the correct helper pairs

### MoleculeTypeMerger { #kimmdy.coordinates.MoleculeTypeMerger }

```python
coordinates.MoleculeTypeMerger(self, mol_a, mol_b, ff, morse_only=False)
```

Takes two MoleculeTypes and joins them for a smooth free-energy like parameter transition simulation

#### Methods

| Name | Description |
| --- | --- |
| [add_helper_pairs](#kimmdy.coordinates.MoleculeTypeMerger.add_helper_pairs) | growing/shrinking pairs are used to turn on/off |
| [merge](#kimmdy.coordinates.MoleculeTypeMerger.merge) | modiefies mol_b, the reactive moleculetype of of top_b, in place |
| [merge_exclusions](#kimmdy.coordinates.MoleculeTypeMerger.merge_exclusions) | Merge exclusions by adding the exclusions from the A state to the B state |
| [merge_pairs](#kimmdy.coordinates.MoleculeTypeMerger.merge_pairs) | Merge pairs that are from the respective pairs sections of the topologies |

##### add_helper_pairs { #kimmdy.coordinates.MoleculeTypeMerger.add_helper_pairs }

```python
coordinates.MoleculeTypeMerger.add_helper_pairs()
```

growing/shrinking pairs are used to turn on/off
LJ / non-bonded interactions.
If it is for a binding event, the pair is vanishing, as it will be an
exclusion once bound. If a bond is breaking, the pair interaction
is slowly turned on, as it was excluded previously.

##### merge { #kimmdy.coordinates.MoleculeTypeMerger.merge }

```python
coordinates.MoleculeTypeMerger.merge()
```

modiefies mol_b, the reactive moleculetype of of top_b, in place

##### merge_exclusions { #kimmdy.coordinates.MoleculeTypeMerger.merge_exclusions }

```python
coordinates.MoleculeTypeMerger.merge_exclusions()
```

Merge exclusions by adding the exclusions from the A state to the B state

##### merge_pairs { #kimmdy.coordinates.MoleculeTypeMerger.merge_pairs }

```python
coordinates.MoleculeTypeMerger.merge_pairs()
```

Merge pairs that are from the respective pairs sections of the topologies

## Functions

| Name | Description |
| --- | --- |
| [break_bond_plumed](#kimmdy.coordinates.break_bond_plumed) | Break bond in plumed configuration file. |
| [get_explicit_or_type](#kimmdy.coordinates.get_explicit_or_type) | Takes an Interaction and associated key, InteractionTypes, Topology |
| [is_parameterized](#kimmdy.coordinates.is_parameterized) | Parameterized topology entries have c0 and c1 attributes != None |
| [merge_top_slow_growth](#kimmdy.coordinates.merge_top_slow_growth) | Takes two Topologies and joins them for a smooth free-energy like parameter transition simulation. |
| [place_atom](#kimmdy.coordinates.place_atom) | Place an atom to new coords at the last time point of the trajectory |
| [to_pairkey](#kimmdy.coordinates.to_pairkey) | Turn key into a pair key |

### break_bond_plumed { #kimmdy.coordinates.break_bond_plumed }

```python
coordinates.break_bond_plumed(files, breakpair, newplumed)
```

Break bond in plumed configuration file.

#### Parameters {.doc-section .doc-section-parameters}

| Name      | Type                                           | Description   | Default    |
|-----------|------------------------------------------------|---------------|------------|
| files     | [TaskFiles](`kimmdy.tasks.TaskFiles`)          |               | _required_ |
| breakpair | [tuple](`tuple`)\[[str](`str`), [str](`str`)\] |               | _required_ |

### get_explicit_or_type { #kimmdy.coordinates.get_explicit_or_type }

```python
coordinates.get_explicit_or_type(
    key,
    interaction,
    interaction_types,
    mol,
    periodicity='',
    use_state_b=False,
)
```

Takes an Interaction and associated key, InteractionTypes, Topology
and Periodicity (for dihedrals) and returns an object with the parameters of this Interaction

### is_parameterized { #kimmdy.coordinates.is_parameterized }

```python
coordinates.is_parameterized(entry)
```

Parameterized topology entries have c0 and c1 attributes != None

### merge_top_slow_growth { #kimmdy.coordinates.merge_top_slow_growth }

```python
coordinates.merge_top_slow_growth(top_a, top_b, morse_only=False)
```

Takes two Topologies and joins them for a smooth free-energy like parameter transition simulation.
Modifies topB in place.
All changes are contained to the `Reactive` moleculetype.

### place_atom { #kimmdy.coordinates.place_atom }

```python
coordinates.place_atom(files, step, ttime=None)
```

Place an atom to new coords at the last time point of the trajectory

### to_pairkey { #kimmdy.coordinates.to_pairkey }

```python
coordinates.to_pairkey(key)
```

Turn key into a pair key
Takes the key for a higher ordre interaction (bond, angle, dihedral)
and from this takes the outermost atoms and returns them as a key for the corresponding
pair interaction by sorting them in ascending order.