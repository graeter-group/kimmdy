---
title: "Input File"
execute:
  echo: false
---

## Autocompletion

KIMMDY comes with autocompletion and tooltips insight your editor for its configuration file `kimmdy.yml`. 

All you need to do is activate a [yaml-language-server](https://github.com/redhat-developer/yaml-language-server)
in your editor (e.g. [VS Code](https://code.visualstudio.com/) via the 
[YAML extension](https://marketplace.visualstudio.com/items?itemName=redhat.vscode-yaml) or 
[Neovim](https://neovim.io/) via [lspconfig](https://github.com/neovim/nvim-lspconfig)).

Activating this is very much recommended, as it prevents many typos, missaligned braces
and especially incorrect indentation (people love YAML for its readability,
but hate it for its whitespace sensitivity).

::: {.callout-tip appearance="simple"}
This only works, if your config file is called `kimmdy.yml` and the Scheme Store hasn't been disabled
in your editor settings (e.g. `Yaml > Schema Store: Enable`.
:::

## All Options

The following is a list of the options that can be set in the `kimmdy.yml` file.
It includes reactions currently available in KIMMDY as plugins.
Nested options are separated by a `.`.
`*` denotes an arbitrary name for a section.

Thus, documentation for the following options in a `kimmdy.yml` file:

```yaml
cwd: 'path/to/working/directory'
topology:
  reactive:
    exclude: POPC
```

Are found in this list under the headings `cwd` and `topology.reactive.exclude` respectively.

```{python}
from kimmdy.plugins import discover_plugins, reaction_plugins
from kimmdy.schema import get_combined_scheme, flatten_scheme, generate_markdown_table

discover_plugins()
```

```{python}
#| output: asis
scheme = get_combined_scheme()
flat_scheme = flatten_scheme(scheme)

for item in flat_scheme:
  print(f"### {item['key']}\n")
  print(f"{item['desc']}\n\n")
  if item['type'] != "":
    print(f"**Type**: {item['type']}\n\n")
  if item['enum'] != "":
    print(f"**Options**: {item['enum']}\n\n")
  if item['default'] != "":
    print(f"**Default**: {item['default']}\n\n")
```

## Example `kimmdy.yml` Files

```{.yaml filename='kimmdy.yml'}
dryrun: false
max_tasks: 100
name: 'hat_tf_000'
gromacs_alias: 'gmx'
top: 'Ala_out.top'
gro: 'npt.gro'
ndx: 'index.ndx'
mds:
  equilibrium:
    mdp: 'md.mdp'
  relax:
    mdp: 'md_slow.mdp'
changer:
  coordinates:
    md: 'relax'      
reactions:
  hat_reaction:
    frequency_factor: 100000000
    h_cutoff: 3
    polling_rate: 1

sequence:
- equilibrium
- mult: 2
  tasks:
  - equilibrium
  - reactions
```


