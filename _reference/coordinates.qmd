# coordinates { #kimmdy.coordinates }

`coordinates`

coordinate, topology and plumed modification functions

## Functions

| Name | Description |
| --- | --- |
| [break_bond_plumed](#kimmdy.coordinates.break_bond_plumed) | Break bond in plumed configuration file. |
| [get_explicit_MultipleDihedrals](#kimmdy.coordinates.get_explicit_MultipleDihedrals) | Takes a valid dihedral key and returns explicit |
| [get_explicit_or_type](#kimmdy.coordinates.get_explicit_or_type) | Takes an Interaction and associated key, InteractionTypes, Topology |
| [is_parameterized](#kimmdy.coordinates.is_parameterized) | Parameterized topology entries have c0 and c1 attributes != None |
| [merge_dihedrals](#kimmdy.coordinates.merge_dihedrals) | Merge one to two Dihedrals or -Types into a Dihedral in free-energy syntax |
| [merge_top_moleculetypes_slow_growth](#kimmdy.coordinates.merge_top_moleculetypes_slow_growth) | Takes two Topologies and joins them for a smooth free-energy like parameter transition simulation |
| [merge_top_slow_growth](#kimmdy.coordinates.merge_top_slow_growth) | Takes two Topologies and joins them for a smooth free-energy like parameter transition simulation. |
| [place_atom](#kimmdy.coordinates.place_atom) | Place an atom to new coords at the last time point of the recipe timespans |

### break_bond_plumed { #kimmdy.coordinates.break_bond_plumed }

`coordinates.break_bond_plumed(files, breakpair, newplumed)`

Break bond in plumed configuration file.

#### Parameters

| Name        | Type                                           | Description   | Default    |
|-------------|------------------------------------------------|---------------|------------|
| `files`     | [TaskFiles](`kimmdy.tasks.TaskFiles`)          |               | _required_ |
| `breakpair` | [tuple](`tuple`)\[[str](`str`), [str](`str`)\] |               | _required_ |

### get_explicit_MultipleDihedrals { #kimmdy.coordinates.get_explicit_MultipleDihedrals }

`coordinates.get_explicit_MultipleDihedrals(dihedral_key, mol, dihedrals_in, ff, periodicity_max=6)`

Takes a valid dihedral key and returns explicit
dihedral parameters for a given topology

### get_explicit_or_type { #kimmdy.coordinates.get_explicit_or_type }

`coordinates.get_explicit_or_type(key, interaction, interaction_types, mol, periodicity='')`

Takes an Interaction and associated key, InteractionTypes, Topology
and Periodicity (for dihedrals) and returns an object with the parameters of this Interaction

### is_parameterized { #kimmdy.coordinates.is_parameterized }

`coordinates.is_parameterized(entry)`

Parameterized topology entries have c0 and c1 attributes != None

### merge_dihedrals { #kimmdy.coordinates.merge_dihedrals }

`coordinates.merge_dihedrals(dihedral_key, interactionA, interactionB, interaction_typesA, interaction_typesB, molA, molB, funct, periodicity)`

Merge one to two Dihedrals or -Types into a Dihedral in free-energy syntax

### merge_top_moleculetypes_slow_growth { #kimmdy.coordinates.merge_top_moleculetypes_slow_growth }

`coordinates.merge_top_moleculetypes_slow_growth(molA, molB, ff, focus_nr=None)`

Takes two Topologies and joins them for a smooth free-energy like parameter transition simulation

### merge_top_slow_growth { #kimmdy.coordinates.merge_top_slow_growth }

`coordinates.merge_top_slow_growth(topA, topB, focus_nr=None)`

Takes two Topologies and joins them for a smooth free-energy like parameter transition simulation.


TODO: for now this assumes that only one moleculeype (the first, index 0) is of interest.

### place_atom { #kimmdy.coordinates.place_atom }

`coordinates.place_atom(files, step, timespan)`

Place an atom to new coords at the last time point of the recipe timespans