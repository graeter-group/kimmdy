# analysis { #kimmdy.analysis }

`analysis`

Analysis tools for KIMMDY runs.
For command line usage, run `kimmdy-analysis -h`.

## Functions

| Name | Description |
| --- | --- |
| [concat_traj](#kimmdy.analysis.concat_traj) | Find and concatenate trajectories (.xtc files) from a KIMMDY run into one trajectory. |
| [entry_point_analysis](#kimmdy.analysis.entry_point_analysis) | Analyse existing KIMMDY runs. |
| [get_analysis_cmdline_args](#kimmdy.analysis.get_analysis_cmdline_args) | Parse command line arguments. |
| [get_analysis_dir](#kimmdy.analysis.get_analysis_dir) | Get analysis directory for a KIMMDY run. |
| [get_step_directories](#kimmdy.analysis.get_step_directories) | create list of subdirectories that match the steps. |
| [plot_energy](#kimmdy.analysis.plot_energy) | Plot GROMACS energy for a KIMMDY run. |
| [plot_rates](#kimmdy.analysis.plot_rates) | Plot rates of all possible reactions for each 'decide_recipe' step. |
| [radical_population](#kimmdy.analysis.radical_population) | Plot population of radicals for a KIMMDY run. |

### concat_traj { #kimmdy.analysis.concat_traj }

`analysis.concat_traj(dir, steps, open_vmd=False)`

Find and concatenate trajectories (.xtc files) from a KIMMDY run into one trajectory.
The concatenated trajectory is centered and pbc corrected.

#### Parameters

| Name       | Type                                                                    | Description                                                                                      | Default    |
|------------|-------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------|------------|
| `dir`      | [str](`str`)                                                            | Directory to search for subdirectories                                                           | _required_ |
| `steps`    | [Union](`typing.Union`)\[[list](`list`)\[[str](`str`)\], [str](`str`)\] | List of steps e.g. ["equilibrium", "production"]. Or a string "all" to return all subdirectories | _required_ |
| `open_vmd` | [bool](`bool`)                                                          | Open concatenated trajectory in VMD                                                              | `False`    |

### entry_point_analysis { #kimmdy.analysis.entry_point_analysis }

`analysis.entry_point_analysis()`

Analyse existing KIMMDY runs.

### get_analysis_cmdline_args { #kimmdy.analysis.get_analysis_cmdline_args }

`analysis.get_analysis_cmdline_args()`

Parse command line arguments.

#### Returns

| Type                          | Description   |
|-------------------------------|---------------|
| Parsed command line arguments |               |

### get_analysis_dir { #kimmdy.analysis.get_analysis_dir }

`analysis.get_analysis_dir(dir)`

Get analysis directory for a KIMMDY run.

Creates the directory if it does not exist.

#### Parameters

| Name   | Type                   | Description             | Default    |
|--------|------------------------|-------------------------|------------|
| `dir`  | [Path](`pathlib.Path`) | Directory of KIMMDY run | _required_ |

#### Returns

| Type                       | Description   |
|----------------------------|---------------|
| Path to analysis directory |               |

### get_step_directories { #kimmdy.analysis.get_step_directories }

`analysis.get_step_directories(dir, steps='all')`

create list of subdirectories that match the steps.
If steps is "all", all subdirectories are returned.

#### Parameters

| Name    | Type                                                                    | Description                                                                                      | Default    |
|---------|-------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------|------------|
| `dir`   | [Path](`pathlib.Path`)                                                  | Directory to search for subdirectories                                                           | _required_ |
| `steps` | [Union](`typing.Union`)\[[list](`list`)\[[str](`str`)\], [str](`str`)\] | List of steps e.g. ["equilibrium", "production"]. Or a string "all" to return all subdirectories | `'all'`    |

### plot_energy { #kimmdy.analysis.plot_energy }

`analysis.plot_energy(dir, steps, terms, open_plot=False)`

Plot GROMACS energy for a KIMMDY run.

#### Parameters

| Name        | Type                                                                    | Description                                                                                                         | Default    |
|-------------|-------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------|------------|
| `dir`       | [str](`str`)                                                            | Directory to search for subdirectories                                                                              | _required_ |
| `steps`     | [Union](`typing.Union`)\[[list](`list`)\[[str](`str`)\], [str](`str`)\] | List of steps e.g. ["equilibrium", "production"]. Or a string "all" to return all subdirectories. Default is "all". | _required_ |
| `terms`     | [list](`list`)\[[str](`str`)\]                                          | Terms from gmx energy that will be plotted. Uses 'Potential' by default.                                            | _required_ |
| `open_plot` | [bool](`bool`)                                                          | Open plot in default system viewer.                                                                                 | `False`    |

### plot_rates { #kimmdy.analysis.plot_rates }

`analysis.plot_rates(dir)`

Plot rates of all possible reactions for each 'decide_recipe' step.

#### Parameters

| Name   | Type         | Description             | Default    |
|--------|--------------|-------------------------|------------|
| `dir`  | [str](`str`) | Directory of KIMMDY run | _required_ |

### radical_population { #kimmdy.analysis.radical_population }

`analysis.radical_population(dir, steps='all', select_atoms='protein', open_plot=False, open_vmd=False)`

Plot population of radicals for a KIMMDY run.

#### Parameters

| Name           | Type                                                                    | Description                                                                                                         | Default     |
|----------------|-------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------|-------------|
| `dir`          | [str](`str`)                                                            | KIMMDY run directory to be analysed.                                                                                | _required_  |
| `steps`        | [Union](`typing.Union`)\[[list](`list`)\[[str](`str`)\], [str](`str`)\] | List of steps e.g. ["equilibrium", "production"]. Or a string "all" to return all subdirectories. Default is "all". | `'all'`     |
| `select_atoms` | [str](`str`)                                                            | Atoms chosen for radical population analysis, default is protein (uses MDAnalysis selection syntax)                 | `'protein'` |
| `open_plot`    | [bool](`bool`)                                                          | Open plot in default system viewer.                                                                                 | `False`     |
| `open_vmd`     | [bool](`bool`)                                                          | Open a pdb in VMD with the radical occupation as B-factors.                                                         | `False`     |