{
  "hash": "5bc98daf939e121664df928d23b97a61",
  "result": {
    "engine": "jupyter",
    "markdown": "---\nexecute:\n  echo: true\ntitle: Analysis\n---\n\n\n\n# CLI Arguments\n\nThe prefered method of starting a KIMMDY run is via the command line, though [Python entry points](../../_reference/cmd.qmd) are supported as well.\n\n## KIMMDY\n\n::: {#dd8868fc .cell execution_count=1}\n``` {.python .cell-code}\n!kimmdy --help\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nusage: kimmdy [-h] [--input INPUT] [--restart] [--loglevel LOGLEVEL]\r\n              [--logfile LOGFILE] [--show-plugins] [--generate-jobscript]\r\n              [--version] [--debug] [--callgraph]\r\n\r\nWelcome to KIMMDY. `kimmdy` runs KIMMDY. Additinal tools are available as\r\n`kimmdy-...` commands. These are `-analysis`, `-modify-top` and `-build-\r\nexamples`. Access their help with `kimmdy-... -h.`Visit the documentation\r\nonline at <https://graeter-group.github.io/kimmdy/>\r\n\r\noptions:\r\n  -h, --help            show this help message and exit\r\n  --input INPUT, -i INPUT\r\n                        Kimmdy input file. Defaults to `kimmdy.yml`. See\r\n                        <https://graeter-\r\n                        group.github.io/kimmdy/guide/references/input.html>\r\n                        for all options. CLI flags (e.g. --restart or\r\n                        --loglevel) have precedence over their counterparts in\r\n                        the input file.\r\n  --restart, -r         Restart or continue from a previous run instead of\r\n                        incrementing the run number for the output directory.\r\n                        It the output directory does not exist, it will be\r\n                        like a regular fresh run.\r\n  --loglevel LOGLEVEL, -l LOGLEVEL\r\n                        Logging level (CRITICAL, ERROR, WARNING, INFO, DEBUG)\r\n  --logfile LOGFILE, -f LOGFILE\r\n                        Logfile\r\n  --show-plugins        List available plugins\r\n  --generate-jobscript  Instead of running KIMMDY directly, generate the\r\n                        output directory and a jobscript `jobscript.sh` for\r\n                        slurm HPC clusters. You can then run this jobscript\r\n                        with sbatch jobscript.sh.\r\n  --version             Show version and exit.\r\n  --debug               On error, drop into debugger\r\n  --callgraph           Generate a visualization of function calls for\r\n                        debugging and documentation.\r\n```\n:::\n:::\n\n\n\n\n::: {#f387136e .cell execution_count=2}\n``` {.python .cell-code}\n!kimmdy-analysis --help\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nusage: kimmdy-analysis [-h] module ...\r\n\r\nWelcome to the KIMMDY analysis module. Use this module to analyse existing\r\nKIMMDY runs.\r\n\r\npositional arguments:\r\n  module\r\n    trjcat              Concatenate trajectories of a KIMMDY run\r\n    energy              Plot GROMACS energy for a KIMMDY run\r\n    radical_population  Plot population of radicals for one or multiple KIMMDY\r\n                        run(s)\r\n    radical_migration   Create a json of radical migration events for further\r\n                        analysis.\r\n    rates               Plot rates of all possible reactions after a MD run.\r\n                        Rates must have been saved!\r\n    runtime             Plot runtime of the tasks of a kimmdy run.\r\n    reaction_participation\r\n                        Plot counts of reaction participation per atom id\r\n\r\noptions:\r\n  -h, --help            show this help message and exit\r\n```\n:::\n:::\n\n\n## Create plumed input\n\nThis module creates input files for plumed based on a topology and index file.\n\n::: {#b0497844 .cell execution_count=3}\n``` {.python .cell-code}\n!kimmdy-create-plumed --help\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nusage: kimmdy-create-plumed [-h] [--entries-to-remove [ENTRIES_TO_REMOVE ...]]\r\n                            [--stride STRIDE] -p TOP -i INDEX\r\n                            [--indexgroup INDEXGROUP]\r\n\r\nBuild plumed input file. Requires a topology file and a gromacs index file.\r\n\r\noptions:\r\n  -h, --help            show this help message and exit\r\n  --entries-to-remove [ENTRIES_TO_REMOVE ...]\r\n                        Either atomnames or bonds, i.e. atomnames separated by\r\n                        a hyphen that should not be written to the plumed\r\n                        configuration file. Default: C-N H* O*\r\n  --stride STRIDE       Frequency of plumed output as multiple of the md\r\n                        timestep. Default: 100\r\n  -p TOP, --top TOP     Gromacs topology file path.\r\n  -i INDEX, --index INDEX\r\n                        Gromacs index file path.\r\n  --indexgroup INDEXGROUP\r\n                        Index group name out of which bonds will be written to\r\n                        the plumed configuration file.\r\n```\n:::\n:::\n\n\n## Remove Hydrogen\n\nThis module builds or restores the example directory in the package.\n\n::: {#1bb00676 .cell execution_count=4}\n``` {.python .cell-code}\n!kimmdy-modify-top --help\n```\n\n::: {.cell-output .cell-output-stdout}\n``````````````````````````\nusage: kimmdy-modify-top [-h] [-p] [--grappa_tag GRAPPA_TAG]\r\n                         [--grappa_charge_model GRAPPA_CHARGE_MODEL]\r\n                         [-r REMOVEH [REMOVEH ...]] [-c GRO] [-a]\r\n                         [-t RESIDUETYPES] [-x RADICALS [RADICALS ...]]\r\n                         [-w INCLUDE] [-b EXCLUDE]\r\n                         top out\r\n\r\nWelcome to the KIMMDY modify top module\r\n\r\npositional arguments:\r\n  top                   GROMACS top file\r\n  out                   Output top file name. Stem reused for gro if\r\n                        applicabel.\r\n\r\noptions:\r\n  -h, --help            show this help message and exit\r\n  -p, --parameterize    Parameterize topology with grappa. (default: False)\r\n  --grappa_tag GRAPPA_TAG\r\n                        Set grappa model tag for parameterization. (default:\r\n                        latest)\r\n  --grappa_charge_model GRAPPA_CHARGE_MODEL\r\n                        Set grappa charge model for parameterization.\r\n                        (default: amber99)\r\n  -r REMOVEH [REMOVEH ...], --removeH REMOVEH [REMOVEH ...]\r\n                        Remove one or more hydrogens by atom nrs in the top\r\n                        file. (default: None)\r\n  -c GRO, --gro GRO     If necessary, also apply actions on gro file to create\r\n                        a compatible gro/top file pair. Output analog to top.\r\n                        (default: None)\r\n  -a, --search_amber_rad\r\n                        Automatic radical search only implemented for amber.\r\n                        If you douse another ff, set this to false, and\r\n                        provide a list of radicalsmanually, if necessary.\r\n                        (default: False)\r\n  -t RESIDUETYPES, --residuetypes RESIDUETYPES\r\n                        GROMACS style residuetypes file. Necessary for\r\n                        parameterization with non-amber atom types. (default:\r\n                        None)\r\n  -x RADICALS [RADICALS ...], --radicals RADICALS [RADICALS ...]\r\n                        Radicals in the system PRIOR to removing hydrogens\r\n                        with the removeH option. (default: None)\r\n  -w INCLUDE, --include INCLUDE\r\n                        Include certain GROMACS topology molecules in\r\n                        `Reactive` molecule. Reads molecule names from a csv\r\n                        file. (default: None)\r\n  -b EXCLUDE, --exclude EXCLUDE\r\n                        Exclude certain GROMACS topology molecules in\r\n                        `Reactive` molecule. Reads molecule names from a csv\r\n                        file. (default: None)\r\n``````````````````````````\n:::\n:::\n\n\n## Examples\n\nThis module builds or restores the example directory in the package. Only works if installed from a git repository!\n\n::: {#32415bb0 .cell execution_count=5}\n``` {.python .cell-code}\n!kimmdy-build-examples --help\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nusage: kimmdy-build-examples [-h] [-r [RESTORE]]\r\n\r\nBuild examples for KIMMDY.\r\n\r\noptions:\r\n  -h, --help            show this help message and exit\r\n  -r [RESTORE], --restore [RESTORE]\r\n                        Overwrite input files in existing example directories,\r\n                        use keyword 'hard' to also delete output files.\r\n```\n:::\n:::\n\n\n",
    "supporting": [
      "cmd_ref_files/figure-html"
    ],
    "filters": [],
    "includes": {}
  }
}