# tools { #kimmdy.tools }

`tools`

Standalone tools that are complementary to KIMMDY.

## Functions

| Name | Description |
| --- | --- |
| [build_examples](#kimmdy.tools.build_examples) | Build example directories for KIMMDY from integration tests. |
| [edgelist_to_dot_graph](#kimmdy.tools.edgelist_to_dot_graph) | Convert a list of edges to a dot graph. |
| [entry_point_build_examples](#kimmdy.tools.entry_point_build_examples) | Build examples from the command line. |
| [entry_point_remove_hydrogen](#kimmdy.tools.entry_point_remove_hydrogen) | Remove hydrogen by atom nr in a gro and topology file |
| [get_build_example_cmdline_args](#kimmdy.tools.get_build_example_cmdline_args) | Parse command line arguments. |
| [get_remove_hydrogen_cmdline_args](#kimmdy.tools.get_remove_hydrogen_cmdline_args) | parse cmdline args for remove_hydrogen |
| [remove_hydrogen](#kimmdy.tools.remove_hydrogen) | Remove one hydrogen from a gro and top file to create a radical. |
| [top_to_graph](#kimmdy.tools.top_to_graph) | Convert a topology to a dot graph. |
| [topology_to_edgelist](#kimmdy.tools.topology_to_edgelist) | Convert a topology to a list of edges for a dot graph. |
| [write_top_as_dot](#kimmdy.tools.write_top_as_dot) | Write a topology as a dot graph to a file. |

### build_examples { #kimmdy.tools.build_examples }

`tools.build_examples(restore)`

Build example directories for KIMMDY from integration tests.

#### Parameters

| Name      | Type         | Description                                                                                          | Default    |
|-----------|--------------|------------------------------------------------------------------------------------------------------|------------|
| `restore` | [str](`str`) | If True, overwrite input files in existing example directories. If "hard", also delete output files. | _required_ |

### edgelist_to_dot_graph { #kimmdy.tools.edgelist_to_dot_graph }

`tools.edgelist_to_dot_graph(ls, overlap='true')`

Convert a list of edges to a dot graph.

### entry_point_build_examples { #kimmdy.tools.entry_point_build_examples }

`tools.entry_point_build_examples()`

Build examples from the command line.

### entry_point_remove_hydrogen { #kimmdy.tools.entry_point_remove_hydrogen }

`tools.entry_point_remove_hydrogen()`

Remove hydrogen by atom nr in a gro and topology file

### get_build_example_cmdline_args { #kimmdy.tools.get_build_example_cmdline_args }

`tools.get_build_example_cmdline_args()`

Parse command line arguments.

#### Returns

| Type                     | Description                   |
|--------------------------|-------------------------------|
| [Namespace](`Namespace`) | parsed command line arguments |

### get_remove_hydrogen_cmdline_args { #kimmdy.tools.get_remove_hydrogen_cmdline_args }

`tools.get_remove_hydrogen_cmdline_args()`

parse cmdline args for remove_hydrogen

### remove_hydrogen { #kimmdy.tools.remove_hydrogen }

`tools.remove_hydrogen(gro, top, nr, parameterize, equilibrate, gmx_mdrun_flags='')`

Remove one hydrogen from a gro and top file to create a radical.

#### Parameters

| Name           | Type           | Description                                                                          | Default    |
|----------------|----------------|--------------------------------------------------------------------------------------|------------|
| `gro`          | [str](`str`)   | Path to GROMACS gro file                                                             | _required_ |
| `top`          | [str](`str`)   | Path to GROMACS top file                                                             | _required_ |
| `nr`           | [str](`str`)   | Atom number as indicated in the GROMACS gro and top file                             | _required_ |
| `parameterize` | [bool](`bool`) | Parameterize topology with grappa after removing hydrogen.                           | _required_ |
| `equilibrate`  | [bool](`bool`) | Do a minimization and equilibration with GROMACS. Uses mdp files from kimmdy assets. | _required_ |

### top_to_graph { #kimmdy.tools.top_to_graph }

`tools.top_to_graph(top, overlap='true')`

Convert a topology to a dot graph.

Can be used in notebooks to write a dot file and render with quarto.

### topology_to_edgelist { #kimmdy.tools.topology_to_edgelist }

`tools.topology_to_edgelist(top)`

Convert a topology to a list of edges for a dot graph.

### write_top_as_dot { #kimmdy.tools.write_top_as_dot }

`tools.write_top_as_dot(top, path, overlap='true')`

Write a topology as a dot graph to a file.

Can be used in notebooks to write a dot file and render with quarto.