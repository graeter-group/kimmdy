# topology.utils { #kimmdy.topology.utils }

`topology.utils`

## Functions

| Name | Description |
| --- | --- |
| [get_protein_section](#kimmdy.topology.utils.get_protein_section) | Get content of a section in the first moleculetype (protein) from a topology dict. |
| [get_top_section](#kimmdy.topology.utils.get_top_section) | Get content of a section from a topology dict. |
| [set_protein_section](#kimmdy.topology.utils.set_protein_section) | Set content of a section in the first moleculetype (protein) from a topology dict. |
| [set_top_section](#kimmdy.topology.utils.set_top_section) | Set content of a section from a topology dict. |

### get_protein_section { #kimmdy.topology.utils.get_protein_section }

`topology.utils.get_protein_section(top, name)`

Get content of a section in the first moleculetype (protein) from a topology dict.

### get_top_section { #kimmdy.topology.utils.get_top_section }

`topology.utils.get_top_section(top, name, moleculetype=None)`

Get content of a section from a topology dict.
By resolving any `#ifdef` statements by check in the top['define'] dict
and choosing the 'content' or 'else_content' depending on the result.

### set_protein_section { #kimmdy.topology.utils.set_protein_section }

`topology.utils.set_protein_section(top, name, value)`

Set content of a section in the first moleculetype (protein) from a topology dict.

### set_top_section { #kimmdy.topology.utils.set_top_section }

`topology.utils.set_top_section(top, name, value, moleculetype=None)`

Set content of a section from a topology dict.
By resolving any `#ifdef` statements by check in the top['define'] dict
and choosing the 'content' or 'else_content' depending on the result.