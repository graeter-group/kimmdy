---
title: Visualize Topologies
mermaid-format: svg
---

## Capped Alanine with a radical

```{python}
from kimmdy.parsing import read_top
from kimmdy.topology.topology import Topology
from pathlib import Path
from kimmdy.tools import write_top_as_dot
```


```{python}
#| eval: true
path_a = read_top(Path('../../tests/test_files/test_coordinates/topol_stateA.top'), use_gmx_dir=False)
path_b = read_top(Path('../../tests/test_files/test_coordinates/topol_stateB.top'), use_gmx_dir=False)
top_a = Topology(path_a)
top_b = Topology(path_b)

write_top_as_dot(top_a, "ala-top-a.dot")
write_top_as_dot(top_b, "ala-top-b.dot")
```

:::{layout-ncol=2}
```{dot}
//| echo: false
//| label: fig-ala
//| fig-cap: "A diagram of the Ala topology"
//| fig-width: 100%
//| file: ala-top-a.dot
```

```{dot}
//| echo: false
//| label: fig-ala
//| fig-cap: "A diagram of the Ala topology after HAT"
//| fig-width: 100%
//| file: ala-top-b.dot
```
:::

For example, these are the resulting changes in dihedrals:

```{python}
for dihedral in top_a.proper_dihedrals:
  if dihedral not in top_b.proper_dihedrals:
    print(dihedral)

print("----")
for dihedral in top_b.proper_dihedrals:
  if dihedral not in top_a.proper_dihedrals:
    print(dihedral)
```

## Multiple molecules

```{python}
urea_dict = read_top(Path('../../tests/test_files/test_topology/urea.top'), use_gmx_dir=False)
urea = Topology(urea_dict)
write_top_as_dot(urea, "urea-top.dot")
```

```{dot}
//| echo: false
//| label: fig-ala
//| fig-cap: "Topology of one molecule of urea"
//| file: urea-top.dot
```

When we want to run reactions within molecules that are either
separate moleculetypes or multiples of the same moleculetype,
KIMMDY can combine those into a single moleculetype and
make multiples explicit.

i.e. if we have a topology with two molecules of urea
defined as:

```ini
[ system ]
Urea in Water

[ molecules ]
;molecule name   nr.
Urea             2
SOL              1000
```

```{python}
urea_dict = read_top(Path('../../tests/test_files/test_topology/urea-times-2.top'), use_gmx_dir=False)
urea = Topology(urea_dict)
write_top_as_dot(urea, "urea-2-top.dot")
```

We end up with

```{dot}
//| echo: false
//| label: fig-ala
//| fig-cap: "A diagram of the two urea molecules topology"
//| file: urea-2-top.dot
```

This way, explicit atom numbers match up with the atom numbers
in the coordinate file (or rather, line numbers - 2, since the
numbers in the actual `atomnr` column can overflow due to the fixed-width file format).


