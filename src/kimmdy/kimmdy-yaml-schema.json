{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "type": "object",
  "additionalProperties": false,
  "properties": {
    "dryrun": {
      "description": "Don't run the actual simulations, just print the tasks",
      "type": "boolean",
      "pytype": "bool",
      "default": false
    },
    "cwd": {
      "description": "Working directory",
      "type": "string",
      "pytype": "Path",
      "default": "."
    },
    "name": {
      "description": "Used for output folder if out is not specified",
      "type": "string",
      "pytype": "str",
      "default": "kimmdy"
    },
    "out": {
      "description": "Output folder",
      "type": "string",
      "pytype": "Path"
    },
    "max_tasks": {
      "description": "Maximum number of tasks to run. This is useful when a task in the sequence can dymanically add more tasks. 0 means no limit.",
      "type": "integer",
      "pytype": "int",
      "default": 0
    },
    "max_hours": {
      "description": "Stop KIMMDY after max_hours hours. Set this lower than the limit of your HPC cluster for use with a re-submit jobscript. 0 Means no limit.",
      "type": "integer",
      "pytype": "int",
      "default": 0
    },
    "run": {
      "description": "Replica number",
      "type": "integer",
      "pytype": "int",
      "default": "1"
    },
    "top": {
      "description": "Topology file",
      "type": "string",
      "pytype": "Path",
      "default": "topol.top"
    },
    "gro": {
      "description": "Coordinate file",
      "type": "string",
      "pytype": "Path",
      "default": "conf.gro"
    },
    "ndx": {
      "description": "Index file",
      "type": "string",
      "pytype": "Path",
      "default": "index.ndx"
    },
    "gromacs_alias": {
      "description": "Gromacs alias",
      "type": "string",
      "pytype": "str",
      "default": "gmx"
    },
    "gmx_mdrun_flags": {
      "description": "Flags passed to gmx mdrun. e.g. `-nt 8 -maxh 24`",
      "type": "string",
      "pytype": "str",
      "default": "-maxh 24 -dlb yes"
    },
    "maxh": {
      "description": "Maximum number of hours to run KIMMDY until it stops to aviod running out of time on the cluster. This enables graceful shutdown of KIMMDY and allows it to resume from the last checkpoint e.g. via a jobscript.",
      "type": "integer",
      "pytype": "int",
      "default": 24,
      "minimum": 1
    },
    "ff": {
      "description": "Force field directory (looks for .ff in cwd if not set)",
      "type": "string",
      "pytype": "Path",
      "default": "*.ff"
    },
    "plumed": {
      "description": ".dat file containing plumed config for starting with reaction",
      "type": "string",
      "pytype": "Path"
    },
    "tpr": {
      "description": ".tpr file of a finished simulation for starting with reaction",
      "type": "string",
      "pytype": "Path"
    },
    "trr": {
      "description": ".trr file of a finished simulation for starting with reaction",
      "type": "string",
      "pytype": "Path"
    },
    "mds": {
      "type": "object",
      "description": "Settings for MD steps, e.g. mdp files, plumed files, etc.",
      "patternProperties": {
        ".*": {
          "type": "object",
          "properties": {
            "mdp": {
              "type": "string",
              "pytype": "Path",
              "description": "MDP file for the MD step"
            },
            "prefix": {
              "type": "string",
              "pytype": "str",
              "description": "TODO: What is this?"
            },
            "overwrite": {
              "type": "string",
              "pytype": "str",
              "description": "TODO: What is this?"
            },
            "plumed": {
              "type": "string",
              "pytype": "Path"
            }
          },
          "required": ["mdp"],
          "additionalProperties": false
        }
      }
    },
    "changer": {
      "type": "object",
      "description": "Settings for the coordinate changer",
      "properties": {
        "coordinates": {
          "type": "object",
          "properties": {
            "md": {
              "type": "string",
              "pytype": "str"
            },
            "md_parameter_growth": {
              "type": "string",
              "pytype": "str"
            }
          }
        },
        "topology": {
          "type": "object",
          "description": "Settings for parameter changes in the topology file",
          "properties": {
            "parameterization": {
              "type": "string",
              "pytype": "str",
              "enum": ["grappa","basic"],
              "default": "grappa"
            }
          },
          "required": ["parameterization"],
          "additionalProperties": false
        }
      },
      "required": ["coordinates", "topology"]
    },
    "sequence": {
      "description": "List of tasks. Each task can be a string (the name of the task) or an object with the task name and a multiplicity `mult: <int>`",
      "pytype": "Sequence",
      "type": "array",
      "items": {
        "oneOf": [
          { "type": "string" },
          {
            "type": "object",
            "properties": {
              "mult": {
                "type": "integer",
                "description": "Multiplicity of the task",
                "default": 2,
                "minimum": 1 },
              "tasks": {
                "type": "array",
                "description": "List of tasks",
                "items": {
                  "oneOf": [
                    { "type": "string" },
                    {
                      "type": "object",
                      "properties": {
                        "mult": {
                          "type": "integer",
                          "description": "Multiplicity of the task",
                          "default": 2,
                          "minimum": 1 },
                        "tasks": {
                          "type": "array",
                          "description": "List of tasks",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": ["mult", "tasks"],
                      "additionalProperties": false
                    }
                  ]
                }
              }
            },
            "required": ["mult", "tasks"],
            "additionalProperties": false
          }
        ]
      }
    },
    "reactions": {
      "type": "object",
      "description": "Settings for reactions",
      "additionalProperties": true,
      "properties": {
        "homolysis": {
          "$ref": "../../plugins/default_reactions/src/homolysis/kimmdy-yaml-schema.json"
        },
        "hat_naive": {
          "$ref": "../../plugins/default_reactions/src/hat_naive/kimmdy-yaml-schema.json"
        },
        "dummyreaction": {
          "$ref": "../../plugins/default_reactions/src/dummyreaction/kimmdy-yaml-schema.json"
        }
      }
    },
    "plot_rates" : {
      "description": "Plot the reaction rates",
      "type": "boolean",
      "pytype": "bool",
      "default": false
    },
    "save_recipes" : {
      "description": "Save recipes as csv during `decide_reaction`",
      "type": "boolean",
      "pytype": "bool",
      "default": false
    }
  },
  "required": ["name", "sequence", "changer"]
}
