{
  "hash": "871c9f27e0295c04971dd0fb130ebc77",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Input File\"\nexecute:\n  echo: false\n---\n\n## Autocompletion\n\nKIMMDY comes with autocompletion for the `kimmdy.yml` file.\nYou can add the schema to the configuration of the [yaml-language-server](https://github.com/redhat-developer/yaml-language-server) in your editor\n(e.g. [VS Code](https://code.visualstudio.com/) via the [YAML extension](https://marketplace.visualstudio.com/items?itemName=redhat.vscode-yaml) or [Neovim](https://neovim.io/) via [lspconfig](https://github.com/neovim/nvim-lspconfig)).\nTo associate `kimmdy.yml` files with KIMMDY, add the following to your\n\n### VS Code settings\n\n```{.json filename='settings.json'}\n\"yaml.schemas\": {\n    \"https://raw.githubusercontent.com/hits-mbm-dev/kimmdy/main/src/kimmdy/kimmdy-yaml-schema.json\": \"kimmdy.yml\",\n}\n```\n\n### Neovim settings\n\n```{.lua filename='init.lua'}\nrequire(\"lspconfig\").yamlls.setup({\n  on_attach = on_attach,\n  capabilities = capabilities,\n  flags = lsp_flags,\n  settings = {\n    yaml = {\n      schemas = {\n        [\"https://raw.githubusercontent.com/hits-mbm-dev/kimmdy/main/src/kimmdy/kimmdy-yaml-schema.json\"] = \"kimmdy.yml\",\n      },\n    },\n  },\n})\n```\n\n## All Options\n\nThe following is a list of the options that can be set in the `kimmdy.yml` file.\nIt includes reactions currently available in KIMMDY as plugins.\nNested options are separated by a `.`.\n`*` denotes an arbitrary name for a section.\nThe key for a section is **bold**.\n\n| Option | Description | Type | Default |\n| --- | --- | --- | --- | --- |\n| dryrun | Don't run the actual simulations, just print the tasks | bool | False |\n| write_checkpoint | Write checkpoints to continue a KIMMDY run from. Default True | bool | True |\n| cwd | Working directory. Default is current working directory | Path |  |\n| name | Used for output folder if `out` is not specified | str | kimmdy |\n| out | Output folder | Path |  |\n| log | Settings for logging |  |  |\n| max_tasks | Maximum number of tasks to run. This is useful when a task in the sequence can dymanically add more tasks. 0 means no limit. | int | 0 |\n| max_hours | Stop KIMMDY after max_hours hours. Set this lower than the limit of your HPC cluster for use with a re-submit jobscript. 0 Means no limit. | int | 0 |\n| kmc | KMC algorithm overwrite. Should be set by the reactions, but can be changed here. | str |  |\n| tau_scale | Scaling parameter for tau in the extrande kmc algorithm. | float | 1.0 |\n| top | Topology file | Path | topol.top |\n| topology | Settings for handling the topology file. |  |  |\n| topology.reactive.include | Explicitly include a moleculetype or list of moleculetypes as a space-separated string. | str |  |\n| topology.reactive.exclude | Explicitly exclude a moleculetype or a list as a space-separated string. For example the lipid moleculetype in a bilayer simulation e.g. `DPPC POPC'` | str |  |\n| gro | Coordinate file | Path | conf.gro |\n| ndx | Gromaxs index file | Path | index.ndx |\n| gromacs_alias | Gromacs alias. e.g. `gmx` or `mpirun gmx_mpi` | str | gmx |\n| gmx_mdrun_flags | Flags passed to gmx mdrun. Default `-maxh 24 -dlb yes` | str | -maxh 24 -dlb yes |\n| ff | Force field directory (looks for .ff in cwd if not set) | Path | *.ff |\n| plumed | .dat file containing plumed config | Path |  |\n| tpr | .tpr file of a finished simulation for starting directly with a reaction | Path |  |\n| trr | .trr file of a finished simulation for starting directly with a reaction | Path |  |\n| mds | Settings for MD steps, e.g. mdp files, plumed files, etc. |  |  |\n| mds.\\*.mdp | MDP file for the MD step | Path |  |\n| mds.\\*.use_plumed | Whether plumed should be used for this run or not | bool | False |\n| changer | Settings for applying a reaction recipe |  |  |\n| changer.coordinates.md | MD step from the 'mds' section that is used for relaxation MDs | str |  |\n| changer.coordinates.slow_growth | Whether the chosen MD step is a slow growth/free-energy simulation | bool | False |\n| changer.topology.parameterization | Parameterization scheme that is used on the topology file after changes to it | str | basic |\n| sequence | List of tasks. Each task can be a string (the name of the task) or an object with the task name and a multiplicity `mult: <int>` | Sequence |  |\n| reactions | Settings for reactions |  |  |\n| reactions.homolysis.edis | Dissociation energies data file | Path | edissoc.dat |\n| reactions.homolysis.itp | Additional itp file with bonded parameters | Path | ffbonded.itp |\n| reactions.homolysis.kmc | KMC algorithm for this reaction. | str | rfkmc |\n| reactions.hat_naive.frequency_factor | Frequency factor | float | 1 |\n| reactions.hat_naive.h_cutoff | Cutoff for H atom | float | 4 |\n| reactions.hat_naive.polling_rate | Polling rate | float | 1 |\n| reactions.hat_naive.kmc | KMC algorithm for this reaction. | str | extrande_mod |\n| reactions.dummyreaction.example | This is an example of an option for a reaction. | float | 0.0 |\n| reactions.dummyreaction.example2 | This is another example of an option for a reaction. | str | hello |\n| reactions.dummyreaction.kmc | KMC algorithm for this reaction. | str | extrande_mod |\n| reactions.hat_reaction.frequency_factor | Frequency factor | float |  |\n| reactions.hat_reaction.h_cutoff | Cutoff for H atom | float | 3 |\n| reactions.hat_reaction.model | Model name, optional | str |  |\n| reactions.hat_reaction.ensemble_size | Number of models to use, defaults to all, optional | int |  |\n| reactions.hat_reaction.polling_rate | Polling rate, defaults to 10 | int | 10 |\n| reactions.hat_reaction.radicals | Radical index, usually supplied through kimmdy, optional | int |  |\n| reactions.hat_reaction.change_coords | How to change coordinates. H can be placed at the new position, or a (lambda)-dynamics simulation can be performed. For lambda-dynamics, set up the coordinate changer with slow_growth=True | str | place |\n| reactions.hat_reaction.kmc | KMC algorithm for this reaction. Default: extrande_mod | str | extrande_mod |\n| reactions.hat_reaction.keep_structures | For each reaction a structure is generated. If true, those are kept on disk, otherwise they are only kept in case of a failure. Default: False | bool | False |\n| plot_rates | Plot the reaction rates during the reactions step | bool | True |\n| save_recipes | Save recipes as csv during the reactions step | bool | True |\n: KIMMDY options  {#tbl-options .striped .hover tbl-colwidths=\"[25,50,15,15]\"}\n\n\n## Example `kimmdy.yml` Files\n\n```{.yaml filename='kimmdy.yml'}\ndryrun: false\nmax_tasks: 100\nname: 'hat_tf_000'\ngromacs_alias: 'gmx'\ntop: 'Ala_out.top'\ngro: 'npt.gro'\nndx: 'index.ndx'\nmds:\n  equilibrium:\n    mdp: 'md.mdp'\n  relax:\n    mdp: 'md_slow.mdp'\nchanger:\n  coordinates:\n    md: 'relax'      \nreactions:\n  hat_reaction:\n    frequency_factor: 100000000\n    h_cutoff: 3\n    polling_rate: 1\n\nsequence:\n- equilibrium\n- mult: 2\n  tasks:\n  - equilibrium\n  - reactions\n```\n\n",
    "supporting": [
      "input_files"
    ],
    "filters": [],
    "includes": {}
  }
}