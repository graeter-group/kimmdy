# parsing.TopologyDict { #kimmdy.parsing.TopologyDict }

`parsing.TopologyDict`

A raw representation of a topology file.

Every section, apart from `ffdir` and `define`,
comes with a condition that can be checked against the
`define`s by the helper functions to determine if the content
(a list of lists) should come from `content` or `else_content`.
Some sections such as `moleculetype` also come with `subsections`.

## Examples

```python
raw_top = 
{'ffdir': PosixPath('/usr/share/gromacs/top/amber99.ff'),
 'define': {'_FF_AMBER': [], '_FF_AMBER99': []},
 'defaults': {'content': [['1', '2', 'yes', '0.5', '0.8333']],
  'else_content': [],
  'extra': [],
  'condition': None},
 'atomtypes': {'content': [
   ['C', '6', '12.01', '0.0000', 'A', '3.39967e-01', '3.59824e-01'],
   ['MNH3', '0', '0.0000', '0.0000', 'A', '0.00000e+00', '0.00000e+00']],
  'else_content': [],
  'extra': [],
  'condition': None},
 'moleculetype_0': {'content': [['Urea', '3']],
  'else_content': [],
  'extra': [],
  'condition': None,
  'subsections': {'atoms': {'content': [['1',
      'C',
      '1',
      'URE',
      'C',
      '1',
      '0.880229',
      '12.01000'],
     ['2', 'O', '1', 'URE', 'O', '2', '-0.613359', '16.00000'],
     ['3', 'N', '1', 'URE', 'N1', '3', '-0.923545', '14.01000'],
     ['4', 'H', '1', 'URE', 'H11', '4', '0.395055', '1.00800'],
     ['5', 'H', '1', 'URE', 'H12', '5', '0.395055', '1.00800'],
     ['6', 'N', '1', 'URE', 'N2', '6', '-0.923545', '14.01000'],
     ['7', 'H', '1', 'URE', 'H21', '7', '0.395055', '1.00800'],
     ['8', 'H', '1', 'URE', 'H22', '8', '0.395055', '1.00800']],
    'else_content': [],
    'extra': [],
    'condition': None},
   'bonds': {'content': [['1', '2'],
     ['1', '3'],
     ['1', '6'],
     ['3', '4'],
     ['3', '5'],
     ['6', '7'],
     ['6', '8']],
    'else_content': [],
    'extra': [],
    'condition': None},
   'dihedrals': {'content': [['2', '1', '3', '4', '9'],
     ['2', '1', '3', '5', '9'],
     ['2', '1', '6', '7', '9'],
     ['2', '1', '6', '8', '9'],
     ['3', '1', '6', '7', '9'],
     ['3', '1', '6', '8', '9'],
     ['6', '1', '3', '4', '9'],
     ['6', '1', '3', '5', '9'],
     ['3', '6', '1', '2', '4'],
     ['1', '4', '3', '5', '4'],
     ['1', '7', '6', '8', '4']],
    'else_content': [],
    'extra': [],
    'condition': None},
   'position_restraints': {'content': [['1', '1', '1000', '1000', '1000'],
     ['2', '1', '1000', '0', '1000'],
     ['3', '1', '1000', '0', '0']],
    'else_content': [],
    'extra': [],
    'condition': None},
   'dihedral_restraints': {'content': [['3',
      '6',
      '1',
      '2',
      '1',
      '180',
      '0',
      '10'],
     ['1', '4', '3', '5', '1', '180', '0', '10']],
    'else_content': [],
    'extra': [],
    'condition': None}}},
}
```