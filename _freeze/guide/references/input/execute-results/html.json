{
  "hash": "a366bcf609ff1648ac1a91c9e0df8b63",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Input File\"\nexecute:\n  echo: false\n---\n\n## Autocompletion\n\nKIMMDY comes with autocompletion and tooltips insight your editor for its configuration file `kimmdy.yml`. \n\nAll you need to do is activate a [yaml-language-server](https://github.com/redhat-developer/yaml-language-server)\nin your editor (e.g. [VS Code](https://code.visualstudio.com/) via the \n[YAML extension](https://marketplace.visualstudio.com/items?itemName=redhat.vscode-yaml) or \n[Neovim](https://neovim.io/) via [lspconfig](https://github.com/neovim/nvim-lspconfig)).\n\nActivating this is very much recommended, as it prevents many typos, missaligned braces\nand especially incorrect indentation (people love YAML for its readability,\nbut hate it for its whitespace sensitivity).\n\n::: {.callout-tip appearance=\"simple\"}\nThis only works, if your config file is called `kimmdy.yml` and the Scheme Store hasn't been disabled\nin your editor settings (e.g. `Yaml > Schema Store: Enable`.\n:::\n\n## All Options\n\nThe following is a list of the options that can be set in the `kimmdy.yml` file.\nIt includes reactions currently available in KIMMDY as plugins.\nNested options are separated by a `.`.\n`*` denotes an arbitrary name for a section.\n\nThus, documentation for the following options in a `kimmdy.yml` file:\n\n```yaml\ncwd: 'path/to/working/directory'\ntopology:\n  reactive:\n    exclude: POPC\n```\n\nAre found in this list under the headings `cwd` and `topology.reactive.exclude` respectively.\n\n\n\n### slurm\n\nSLURM HPC options\n\n\n### dryrun\n\nDon't run the actual simulations, just print the tasks\n\n\n**Type**: bool\n\n\n**Default**: False\n\n\n### parameterize_at_setup\n\nparameterize the topology during the setup task\n\n\n**Type**: bool\n\n\n**Default**: True\n\n\n### cwd\n\nWorking directory. Default is current working directory\n\n\n**Type**: Path\n\n\n### name\n\nUsed for output folder if `out` is not specified\n\n\n**Type**: str\n\n\n**Default**: kimmdy\n\n\n### out\n\nOutput folder\n\n\n**Type**: Path\n\n\n### log\n\nSettings for logging\n\n\n### max_tasks\n\nMaximum number of tasks to run. This is useful when a task in the sequence can dymanically add more tasks. 0 means no limit.\n\n\n**Type**: int\n\n\n**Default**: 0\n\n\n### max_hours\n\nStop KIMMDY after max_hours hours. Set this lower than the limit of your HPC cluster for use with a re-submit jobscript. 0 Means no limit.\n\n\n**Type**: int\n\n\n**Default**: 0\n\n\n### kmc\n\nKMC algorithm overwrite. Should be set by the reactions, but can be changed here. Not all reactions may support all algorithms.\n\n\n**Type**: str\n\n\n**Options**: ['', 'rfkmc', 'frm', 'extrande', 'extrande_mod']\n\n\n### tau_scale\n\nScaling parameter for tau in the extrande kmc algorithm.\n\n\n**Type**: float\n\n\n**Default**: 1.0\n\n\n### top\n\nTopology file\n\n\n**Type**: Path\n\n\n**Default**: topol.top\n\n\n### topology\n\nSettings for handling the topology file.\n\n\n### topology.reactive.include\n\nExplicitly include a moleculetype or list of moleculetypes as a space-separated string.\n\n\n**Type**: str\n\n\n### topology.reactive.exclude\n\nExplicitly exclude a moleculetype or a list as a space-separated string. For example the lipid moleculetype in a bilayer simulation e.g. `DPPC POPC'`\n\n\n**Type**: str\n\n\n### gro\n\nCoordinate file\n\n\n**Type**: Path\n\n\n**Default**: conf.gro\n\n\n### ndx\n\nGromaxs index file\n\n\n**Type**: Path\n\n\n**Default**: index.ndx\n\n\n### gromacs_alias\n\nGromacs alias. e.g. `gmx` or `mpirun gmx_mpi`\n\n\n**Type**: str\n\n\n**Default**: gmx\n\n\n### gmx_mdrun_flags\n\nFlags passed to gmx mdrun. Default `-maxh 24 -dlb yes`\n\n\n**Type**: str\n\n\n**Default**: -maxh 24 -dlb yes\n\n\n### ff\n\nForce field directory (looks for .ff in cwd if not set)\n\n\n**Type**: Path\n\n\n**Default**: *.ff\n\n\n### residuetypes\n\nGROMACS rtp file that contains residuetypes. Looks for `aminoacids.rtp` it not set. KIMMDY will first look in the current working directory and then relative to the forecfield directory.\n\n\n**Type**: Path\n\n\n### radicals\n\nspace-separated string of radical atom ids, can be empty\n\n\n**Type**: str\n\n\n### plumed\n\n.dat file containing plumed config\n\n\n**Type**: Path\n\n\n### tpr\n\n.tpr file of a finished simulation for starting directly with a reaction\n\n\n**Type**: Path\n\n\n### trr\n\n.trr file of a finished simulation for starting directly with a reaction\n\n\n**Type**: Path\n\n\n### restart\n\nRestart from a previous run.\n\n\n### mds\n\nSettings for MD steps, e.g. mdp files, plumed files, etc.\n\n\n### mds.\\*.mdp\n\nMDP file for the MD step\n\n\n**Type**: Path\n\n\n### mds.\\*.use_plumed\n\nWhether plumed should be used for this run or not\n\n\n**Type**: bool\n\n\n**Default**: False\n\n\n### changer\n\nSettings for applying a reaction recipe\n\n\n### changer.coordinates.md\n\nMD step from the 'mds' section that is used for relaxation MDs\n\n\n**Type**: str\n\n\n### changer.coordinates.slow_growth\n\nWhether the chosen MD step is a slow growth/free-energy simulation\n\n\n**Type**: bool\n\n\n**Default**: False\n\n\n### changer.topology.parameterization\n\nParameterization scheme that is used on the topology file after changes to it\n\n\n**Type**: str\n\n\n**Options**: ['grappa', 'basic']\n\n\n**Default**: basic\n\n\n### changer.topology.parameterization_kwargs\n\nKeyword argument container for the selected parameterization scheme\n\n\n### sequence\n\nList of tasks. Each task can be a string (the name of the task) or an object with the task name and a multiplicity `mult: <int>`\n\n\n**Type**: Sequence\n\n\n### reactions\n\nSettings for reactions\n\n\n### reactions.homolysis.edis\n\nDissociation energies data file\n\n\n**Type**: Path\n\n\n**Default**: edissoc.dat\n\n\n### reactions.homolysis.itp\n\nAdditional itp file with bonded parameters\n\n\n**Type**: Path\n\n\n**Default**: ffbonded.itp\n\n\n### reactions.homolysis.kmc\n\nKMC algorithm for this reaction.\n\n\n**Type**: str\n\n\n**Options**: ['rfkmc', 'frm', 'extrande', 'extrande_mod']\n\n\n**Default**: rfkmc\n\n\n### reactions.homolysis.check_bound\n\nCheck the topology for bonds between plumed atom pairs\n\n\n**Type**: bool\n\n\n**Default**: False\n\n\n### reactions.homolysis.arrhenius_equation\n\nFor setting values in the arrhenius equation\n\n\n### reactions.hat_naive.frequency_factor\n\nFrequency factor\n\n\n**Type**: float\n\n\n**Default**: 1\n\n\n### reactions.hat_naive.h_cutoff\n\nCutoff for H atom\n\n\n**Type**: float\n\n\n**Default**: 4\n\n\n### reactions.hat_naive.polling_rate\n\nPolling rate\n\n\n**Type**: float\n\n\n**Default**: 1\n\n\n### reactions.hat_naive.kmc\n\nKMC algorithm for this reaction.\n\n\n**Type**: str\n\n\n**Options**: ['rfkmc', 'frm', 'extrande', 'extrande_mod']\n\n\n**Default**: extrande_mod\n\n\n### reactions.dummyreaction.example\n\nThis is an example of an option for a reaction.\n\n\n**Type**: float\n\n\n**Default**: 0.0\n\n\n### reactions.dummyreaction.example2\n\nThis is another example of an option for a reaction.\n\n\n**Type**: str\n\n\n**Default**: hello\n\n\n### reactions.dummyreaction.kmc\n\nKMC algorithm for this reaction.\n\n\n**Type**: str\n\n\n**Options**: ['rfkmc', 'frm', 'extrande', 'extrande_mod']\n\n\n**Default**: extrande_mod\n\n\n### plot_rates\n\nPlot the reaction rates during the reactions step\n\n\n**Type**: bool\n\n\n**Default**: True\n\n\n### save_recipes\n\nSave recipes as csv during the reactions step\n\n\n**Type**: bool\n\n\n**Default**: True\n\n\n\n\n## Example `kimmdy.yml` Files\n\n```{.yaml filename='kimmdy.yml'}\ndryrun: false\nmax_tasks: 100\nname: 'hat_tf_000'\ngromacs_alias: 'gmx'\ntop: 'Ala_out.top'\ngro: 'npt.gro'\nndx: 'index.ndx'\nmds:\n  equilibrium:\n    mdp: 'md.mdp'\n  relax:\n    mdp: 'md_slow.mdp'\nchanger:\n  coordinates:\n    md: 'relax'      \nreactions:\n  hat_reaction:\n    frequency_factor: 100000000\n    h_cutoff: 3\n    polling_rate: 1\n\nsequence:\n- equilibrium\n- mult: 2\n  tasks:\n  - equilibrium\n  - reactions\n```\n\n",
    "supporting": [
      "input_files"
    ],
    "filters": [],
    "includes": {}
  }
}