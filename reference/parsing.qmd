# parsing { #kimmdy.parsing }

`parsing`

## Attributes

| Name | Description |
| --- | --- |
| [GMX_BUILTIN_FF_DIR](#kimmdy.parsing.GMX_BUILTIN_FF_DIR) |  |
| [TopologyDict](#kimmdy.parsing.TopologyDict) |  |

## Functions

| Name | Description |
| --- | --- |
| [create_subsections](#kimmdy.parsing.create_subsections) |  |
| [is_not_comment](#kimmdy.parsing.is_not_comment) |  |
| [read_distances_dat](#kimmdy.parsing.read_distances_dat) | Read a distances.dat plumed output file. |
| [read_edissoc](#kimmdy.parsing.read_edissoc) | reads a edissoc file and turns it into a dict. |
| [read_plumed](#kimmdy.parsing.read_plumed) | Read a plumed.dat configuration file. |
| [read_rtp](#kimmdy.parsing.read_rtp) |  |
| [read_top](#kimmdy.parsing.read_top) | Parse a list of lines from a topology file. |
| [read_xml_ff](#kimmdy.parsing.read_xml_ff) |  |
| [resolve_includes](#kimmdy.parsing.resolve_includes) | Resolve #include statements in a (top/itp) file. |
| [write_plumed](#kimmdy.parsing.write_plumed) | Write a plumed.dat configuration file. |
| [write_top](#kimmdy.parsing.write_top) |  |

### create_subsections { #kimmdy.parsing.create_subsections }

`parsing.create_subsections(ls)`

### is_not_comment { #kimmdy.parsing.is_not_comment }

`parsing.is_not_comment(c)`

### read_distances_dat { #kimmdy.parsing.read_distances_dat }

`parsing.read_distances_dat(distances_dat)`

Read a distances.dat plumed output file.

### read_edissoc { #kimmdy.parsing.read_edissoc }

`parsing.read_edissoc(path)`

reads a edissoc file and turns it into a dict.
the tuple of bond atoms make up the key,
the dissociation energy E_dissoc [kJ mol-1] is the value

### read_plumed { #kimmdy.parsing.read_plumed }

`parsing.read_plumed(path)`

Read a plumed.dat configuration file.

### read_rtp { #kimmdy.parsing.read_rtp }

`parsing.read_rtp(path)`

### read_top { #kimmdy.parsing.read_top }

`parsing.read_top(path)`

Parse a list of lines from a topology file.

#### Parameters

| Name   | Type   | Description                | Default    |
|--------|--------|----------------------------|------------|
| `path` | Path   | Path to the topology file. | _required_ |

#### Assumptions And Limitation

- ``#include`` statements will be resolved
- comments will be removed
- all lines are stripped of leading and trailing whitespace
- ``#undef`` is not supported
- a section within ``ifdef`` may be a subsection of a section that was started
  outside of the ``ifdef``
- ``#if..#endif`` statements only surround a full section or subsection,
  not individual lines within a section and
  a section may either be contained within if ... else or it may not be,
  but it can not be duplicated with one part inside and one outside.
- `if .. else` can't be nested
- ``#include`` s that don't resolve to a valid file path are silently dropped
- sections that can have subsections can also exist multiple, separate times
  e.g. moleculetype will appear multiple times and they should not be merged

### read_xml_ff { #kimmdy.parsing.read_xml_ff }

`parsing.read_xml_ff(path)`

### resolve_includes { #kimmdy.parsing.resolve_includes }

`parsing.resolve_includes(path)`

Resolve #include statements in a (top/itp) file.
Returns a tuple with the list of lines and the Path to the ff directory.

### write_plumed { #kimmdy.parsing.write_plumed }

`parsing.write_plumed(d, path)`

Write a plumed.dat configuration file.

### write_top { #kimmdy.parsing.write_top }

`parsing.write_top(top, outfile)`