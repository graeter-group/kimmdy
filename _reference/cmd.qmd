# cmd { #kimmdy.cmd }

`cmd`

Functions for starting KIMMDY either from python or the command line.
Other entry points such as `kimmdy-analysis` also live here.

## Functions

| Name | Description |
| --- | --- |
| [configure_logger](#kimmdy.cmd.configure_logger) | Configure logging. |
| [entry_point_kimmdy](#kimmdy.cmd.entry_point_kimmdy) | Run KIMMDY from the command line. |
| [get_cmdline_args](#kimmdy.cmd.get_cmdline_args) | Parse command line arguments. |
| [kimmdy_run](#kimmdy.cmd.kimmdy_run) | Run KIMMDY from python. |

### configure_logger { #kimmdy.cmd.configure_logger }

`cmd.configure_logger(config)`

Configure logging.

#### Parameters

| Name     | Type                             | Description                                        | Default    |
|----------|----------------------------------|----------------------------------------------------|------------|
| `config` | [Config](`kimmdy.config.Config`) | configuration that contains log.level and log.file | _required_ |

### entry_point_kimmdy { #kimmdy.cmd.entry_point_kimmdy }

`cmd.entry_point_kimmdy()`

Run KIMMDY from the command line.

The configuration is gathered from the input file,
which is `kimmdy.yml` by default.
See [](`~kimmdy.cmd.get_cmdline_args`) or `kimmdy --help` for the descriptions of the arguments.

### get_cmdline_args { #kimmdy.cmd.get_cmdline_args }

`cmd.get_cmdline_args()`

Parse command line arguments.

#### Returns

| Type                          | Description   |
|-------------------------------|---------------|
| Parsed command line arguments |               |

### kimmdy_run { #kimmdy.cmd.kimmdy_run }

`cmd.kimmdy_run(input=Path('kimmdy.yml'), loglevel=None, logfile=None, checkpoint='', show_plugins=False, show_schema_path=False, generate_jobscript=False, debug=False)`

Run KIMMDY from python.

Also see See [](`~kimmdy.cmd.get_cmdline_args`) or `kimmdy --help` for the descriptions of the arguments.

#### Parameters

| Name                 | Type                                                    | Description                                                                                                                                 | Default              |
|----------------------|---------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------|----------------------|
| `input`              | [Path](`pathlib.Path`)                                  | kimmdy input yml file.                                                                                                                      | `Path('kimmdy.yml')` |
| `loglevel`           | [Optional](`typing.Optional`)\[[str](`str`)\]           | Loglevel. One of ["INFO", "WARNING", "MESSAGE", "DEBUG"]                                                                                    | `None`               |
| `logfile`            | [Optional](`typing.Optional`)\[[Path](`pathlib.Path`)\] | File path of the logfile.                                                                                                                   | `None`               |
| `checkpoint`         | [str](`str`)                                            | File path of a kimmdy.cpt file to restart KIMMDY from a checkpoint. If a directory is given, the file kimmdy.cpt in that directory is used. | `''`                 |
| `show_plugins`       | [bool](`bool`)                                          | Show available plugins and exit.                                                                                                            | `False`              |
| `show_schema_path`   | [bool](`bool`)                                          | Print path to yaml schema for use with yaml-language-server e.g. in VSCode and Neovim                                                       | `False`              |
| `generate_jobscript` | [bool](`bool`)                                          | Instead of running KIMMDY directly, generate at jobscript.sh for slurm HPC clusters                                                         | `False`              |